{"version":3,"sources":["logo.svg","OtherPage.js","Fib.js","App.js","reportWebVitals.js","index.js"],"names":["Link","to","Fib","state","seenIndexes","values","index","handleSubmit","event","a","preventDefault","axios","post","setState","this","fetchValues","fetchIndexes","get","data","map","number","join","entries","key","push","onSubmit","value","onChange","target","renderSeenIndexes","renderValues","Component","App","className","src","logo","alt","href","rel","Route","exact","path","component","OtherPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8LAAe,G,MAAA,IAA0B,kC,gCCG1B,aACX,OACI,sDAEI,cAACA,EAAA,EAAD,CAAMC,GAAG,IAAT,8B,uECqEGC,E,4MAxEXC,MAAQ,CACJC,YAAa,GACbC,OAAQ,GACRC,MAAO,I,EAoBXC,a,uCAAe,WAAOC,GAAP,SAAAC,EAAA,6DACXD,EAAME,iBADK,SAGLC,IAAMC,KAAK,cAAe,CAC5BN,MAAO,EAAKH,MAAMG,QAJX,OAMX,EAAKO,SAAS,CAAEP,MAAO,KANZ,2C,wHAhBXQ,KAAKC,cACLD,KAAKE,iB,oKAIgBL,IAAMM,IAAI,uB,OAAzBZ,E,OACNS,KAAKD,SAAS,CAAER,OAAQA,EAAOa,O,2QAILP,IAAMM,IAAI,mB,OAA9Bb,E,OACNU,KAAKD,SAAS,CACVT,YAAaA,EAAYc,O,gJAc7B,OAAOJ,KAAKX,MAAMC,YAAYe,KAAI,qBAAGC,UAAqBC,KAAK,Q,qCAI/D,IAAMC,EAAU,GAEhB,IAAK,IAAIC,KAAOT,KAAKX,MAAME,OACvBiB,EAAQE,KACJ,6CACeD,EADf,iBACkCT,KAAKX,MAAME,OAAOkB,KAD1CA,IAMlB,OAAOD,I,+BAGD,IAAD,OACL,OACI,gCACI,uBAAMG,SAAUX,KAAKP,aAArB,UACI,sDACA,uBACImB,MAAOZ,KAAKX,MAAMG,MAClBqB,SAAU,SAACnB,GAAD,OAAW,EAAKK,SAAS,CAAEP,MAAOE,EAAMoB,OAAOF,WAE7D,+CAGJ,sDACCZ,KAAKe,oBAEN,oDACCf,KAAKgB,sB,GAnEJC,aC8BHC,MA1Bf,WACI,OACI,cAAC,IAAD,UACI,sBAAKC,UAAU,MAAf,UACI,yBAAQA,UAAU,aAAlB,UACI,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,mBACIH,UAAU,WACVI,KAAK,sBACLT,OAAO,SACPU,IAAI,sBAJR,yBAQA,cAACtC,EAAA,EAAD,CAAMC,GAAG,IAAT,kBACA,cAACD,EAAA,EAAD,CAAMC,GAAG,aAAT,2BAEJ,gCACI,cAACsC,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWxC,IACjC,cAACqC,EAAA,EAAD,CAAOE,KAAK,aAAaC,UAAWC,aCdzCC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f932f6c1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default () => {\n    return (\n        <div>\n            Im some other page!\n            <Link to=\"/\">Go back home</Link>\n        </div>\n    );\n};","import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Fib extends Component {\n    state = {\n        seenIndexes: [],\n        values: {},\n        index: '',\n    };\n\n    componentDidMount() {\n        this.fetchValues();\n        this.fetchIndexes();\n    }\n\n    async fetchValues() {\n        const values = await axios.get('/api/values/current');\n        this.setState({ values: values.data });\n    }\n\n    async fetchIndexes() {\n        const seenIndexes = await axios.get('/api/values/all');\n        this.setState({\n            seenIndexes: seenIndexes.data,\n        });\n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n\n        await axios.post('/api/values', {\n            index: this.state.index,\n        });\n        this.setState({ index: '' });\n    };\n\n    renderSeenIndexes() {\n        return this.state.seenIndexes.map(({ number }) => number).join(', ');\n    }\n\n    renderValues() {\n        const entries = [];\n\n        for (let key in this.state.values) {\n            entries.push(\n                <div key={key}>\n                    For index {key} I calculated {this.state.values[key]}\n                </div>\n            );\n        }\n\n        return entries;\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Enter your index:</label>\n                    <input\n                        value={this.state.index}\n                        onChange={(event) => this.setState({ index: event.target.value })}\n                    />\n                    <button>Submit</button>\n                </form>\n\n                <h3>Indexes I have seen:</h3>\n                {this.renderSeenIndexes()}\n\n                <h3>Calculated Values:</h3>\n                {this.renderValues()}\n            </div>\n        );\n    }\n}\n\nexport default Fib;","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport OtherPage from './OtherPage';\nimport Fib from './Fib';\n\nfunction App() {\n    return (\n        <Router>\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <a\n                        className=\"App-link\"\n                        href=\"https://reactjs.org\"\n                        target=\"_blank\"\n                        rel=\"noopener noreferrer\"\n                    >\n                        Learn React\n                    </a>\n                    <Link to=\"/\">Home</Link>\n                    <Link to=\"/otherpage\">Other Page</Link>\n                </header>\n                <div>\n                    <Route exact path=\"/\" component={Fib} />\n                    <Route path=\"/otherpage\" component={OtherPage} />\n                </div>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}